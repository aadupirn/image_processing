%e
im = double(imread('circuitboard_gaussian.tif'));
arImage = aMean(im,5,5);
imshow(arImage,'DisplayRange',[0,255]);
title('Arithmetic Filter');

geoImage = geoMean(im,5,5);
figure, imshow(geoImage,'DisplayRange',[0,255]);
title('Geometric Filter');

%f
salt = double(imread('circuitboard_salt.tif'));
pepper = double(imread('circuitboard_pepper.tif'));
salt2 = ctharMean(salt,5,5,-1);
pepper2 = ctharMean(pepper,5,5,1);

figure, imshow(salt2,'DisplayRange',[0,255]);
title('Filter Salt Noise');

figure, imshow(pepper2,'DisplayRange',[0,255]);
title('Filter Pepper Noise');

%g
filterEverything = double(imread('circuitboard_saltandpepper.tif'));
everythingFiltered = medianFilter(filterEverything,3,3);
figure, imshow(everythingFiltered,'DisplayRange',[0,255]);
title('Filter Salt and Pepper Noise');



function f_hat = aMean(g, m, n)
[x,y] = size(g);
f_hat = zeros(x,y);
    for i = 1:x
        for j = 1:y
            s = 0;
            for k = ceil(-m/2):floor(m/2)
                for l = ceil(-n/2):floor(n/2)
                    if(i+k > 1 && i+k < x)
                        if(j+l > 1 && j+l < y)
                            s = s + g(i+k,j+l);
                        end
                    end
                end
            end
            s = s/(m*n);
            f_hat(i,j) = floor(s);
        end
    end 
end

function f_hat = geoMean(g, m, n)
[x,y] = size(g);
f_hat = zeros(x,y);
    for i = 1:x
        for j = 1:y
            mult = 1;
            for k = ceil(-m/2):floor(m/2)
                for l = ceil(-n/2):floor(n/2)
                    if(i+k < x && i+k > 1)
                        if(j+l > 1 && j+l < y)
                            mult = mult * g(i+k,j+l);
                        end
                    end
                end
            end
            f_hat(i,j) = floor(nthroot(mult,m*n));
        end
    end 
end

function f_hat = ctharMean(g, m, n, q)
[X,Y] = size(g);
f_hat = zeros(X,Y);
    for i = 1:X
        for j = 1:Y
            sum1 = 0;
            sum2 = 0;
            for k = ceil(-m/2):floor(m/2)
                for l = ceil(-n/2):floor(n/2)
                    if(i+k > 1 && i+k < X)
                        if(j+l > 1 && j+l < Y)
                            sum1 = sum1 + (g(i+k,j+l)^(q+1));
                            sum2 = sum2 + (g(i+k,j+l)^(q)); 
                        end
                    end
                end
            end
            f_hat(i,j) = round(sum1/sum2);
        end
    end 
end

function f_hat = medianFilter(g, m, n)
[X,Y] = size(g);
f_hat = zeros(X,Y);
    for i = 1:X
        for j = 1:Y
            array = zeros(m,n);
            for k = ceil(-m/2):floor(m/2)
                for l = ceil(-n/2):floor(n/2)
                    if(i+k > 1 && i+k < X)
                        if(j+l > 1 && j+l < Y)
                            sub1 = k+ceil(m/2);
                            sub2 = l+ceil(n/2);
                            array(sub1,sub2) = g(i+k,j+l);
                        end
                    end
                end
            end
            newarray = zeros(1,m*n);
            for k = 1:m
                for l = 1:n
                    newarray(((k-1)*m + l)) = array(k,l);
                end
            end
            f_hat(i,j) = median(newarray);
        end
    end 
end